version 11 (dropped):
v_gs = [-2, 0]
git pushed before running

version 12 (dropped):
fix central vertices and change initial state:
init_position_lt = np.array([13, -7]) → init_position_lt = np.array([11, -5.8])
git pushed before running

version 13 (dropped):
init_velocity_gs = np.array([-2, 0]) → init_velocity_gs = np.array([-3, 0])

version 14 (dropped):
init_velocity_gs = np.array([-2, 0]) → init_velocity_gs = np.array([-4, 0])


version 15 (dropped):
init_velocity_gs = np.array([-4, 0]) → init_velocity_gs = np.array([-2, 0])
WEIGHT_DELAY = 2 → WEIGHT_DELAY = 1.5

roll back
WEIGHT_DELAY = 1.5 → WEIGHT_DELAY = 2

test change
WEIGHT_GRP = 1 →  WEIGHT_GRP = 1.5

version 16 (dropped):
WEIGHT_INT = 1
WEIGHT_GRP = 0.8
v_gs = -4,0

# ============#

version 17:
WEIGHT_INT = 1
WEIGHT_GRP = 0.9
v_gs = -4,0
#results of verision17 are great, keep WEIGHT_GRP = 0.9#

version 18:
WEIGHT_INT = 1
WEIGHT_GRP = 0.9
v_gs = -2,0

fix a bug in cal utility and rerun verison 17 & 18

gs agent tends to deviate from the central line
next step: enlarge the cost of deviating form central line

version 19 (gs should deaccelerate when ipv=2)
delta_IPV pi/9→ pi/8
WEIGHT_DEVIATION = 0.3
v_gs = -2,0
results: still by detour rather than deacc

next step: enlarge EIGHT_DEVIATION rerun version19

version 19 
WEIGHT_DEVIATION = 0.5

version 20
v_gs = -1,0

version 21
v_gs = -4,0

version 22
v_gs = -0.5

version 23
v_gs = -1,0
num_step = 30


